{"version":3,"sources":["components/Navbar.js","components/layout/Login.js","components/layout/Home.js","components/layout/Profile.js","components/layout/Signup.js","components/layout/CreatePost.js","reducers/userReducer.js","components/layout/userProfile.js","components/layout/SubUserPost.js","components/layout/Reset.js","components/layout/Newpassword.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","useContext","UserContext","state","dispatch","history","useHistory","className","to","id","type","name","onClick","localStorage","clear","push","Login","useState","password","setPassword","email","setEmail","placeholder","value","onChange","e","target","test","fetch","method","headers","body","JSON","stringify","then","res","json","error","M","toast","html","classes","setItem","token","user","payload","catch","err","console","log","Home","getPost","setGetPost","useEffect","getItem","result","posts","map","item","key","_id","postedBy","style","float","cursor","postId","newItem","filter","src","pic","alt","likes","includes","newOp","length","title","fontWeight","color","comments","c","text","onSubmit","preventDefault","newOpp","Profile","getPic","setGetPic","profPic","setProfPic","mypost","data","FormData","append","profpic","url","width","height","borderRadius","file","files","display","justifyContent","followers","following","Signup","setName","undefined","setUrl","signup","message","sendData","uploadProfilePic","CreatePost","setTitle","setBody","image","setImage","pic_url","vlaue","postDetials","reducer","action","profile","setProfile","userid","useParams","showfollow","setshowfollow","margin","followId","prevState","unfollowId","newfollower","Reset","createContext","Routing","parse","location","pathname","startsWith","exact","path","Newpassword","App","useReducer","Provider","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ebad43cc.chunk.js","sourcesContent":["import React,{useContext} from 'react'\r\nimport './Navbar.css'\r\nimport {Link, useHistory} from 'react-router-dom'\r\nimport {UserContext} from '../App'\r\nfunction Navbar() {\r\n    const {state,dispatch} = useContext(UserContext);\r\n    const history =useHistory()\r\n    const renderList =()=>{\r\n        if(state){\r\n            return[\r\n                <li><Link to=\"/profile\">Profile</Link></li>,\r\n                        <li><Link to=\"/createpost\">Create post</Link></li>,\r\n                        <li><Link to='/myfollowingpost'>Following Users post</Link></li>,\r\n                        <li>                <button className=\"btn #64b5f6 blue lighten-2 \" type=\"submit\" name=\"action\"\r\n                         onClick={()=>{\r\n                             localStorage.clear()\r\n                             dispatch({type:\"CLEAR\"})\r\n                             history.push('/signin')\r\n                             }}>\r\n                             Logout</button>\r\n                        </li>\r\n                        \r\n            ]\r\n                \r\n    \r\n        }\r\n        else{\r\n            return[\r\n                <li><Link to=\"/signin\">Login</Link></li>,\r\n                <li><Link to=\"/signup\">Signup</Link></li>\r\n            ]\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <nav>\r\n                <div className=\"nav-wrapper navbar__color\">\r\n                    <Link to={state?\"/\":\"/signin\"} className=\"brand-logo right\"><h4 className=\"setFont\">Global Media</h4></Link>\r\n                    <ul id=\"nav-mobile\" className=\"left hide-on-med-and-down\">\r\n                      \r\n                      {renderList()}\r\n                        \r\n                    </ul>\r\n                </div>\r\n            </nav>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","import React, {useState,useContext} from 'react';\r\nimport { UserContext } from '../../App'\r\nimport './Login.css';\r\nimport {Link,useHistory} from 'react-router-dom';\r\nimport M from 'materialize-css';\r\n\r\n\r\n\r\n\r\nfunction Login() {\r\n    const {dispatch} = useContext(UserContext)\r\n    const history =useHistory();\r\n    const [password,setPassword]= useState(\"\");\r\n    const [email,setEmail]= useState(\"\");\r\n\r\n    let sendData=()=>{\r\n        if (!(/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.test(email))){\r\n           M.toast({html: \"Invalid Email\",classes:\"#d50000 red accent-4\"})\r\n           return \r\n        }\r\n        fetch(\"http://localhost:5000/auth/signin\",{\r\n        method:\"post\",\r\n        headers:{\r\n            \"Content-type\":\"application/json\"\r\n        },\r\n        body: JSON.stringify({\r\n            email,\r\n            password\r\n        })\r\n\r\n    }).then(res=>res.json())\r\n    .then(e=>{\r\n        \r\n        if(e.error){\r\n            M.toast({html: e.error,classes:\"#ab47bc purple lighten-1\"})\r\n        }\r\n        else{\r\n            localStorage.setItem(\"jwt\",e.token)\r\n            localStorage.setItem(\"user\",JSON.stringify(e.user))\r\n            dispatch({type:\"USER\",payload:e.user})\r\n            M.toast({html: \"Successfully loggedIN\",classes:\"#388e3c green darken-2\"})\r\n            history.push('/')\r\n        }\r\n    }).catch(err=>{\r\n        console.log(err)\r\n    })\r\n    }\r\n    return (\r\n        <div className=\"layout__login\">\r\n            <div className=\"card\">\r\n                <div className=\"card-content white-text\">\r\n                    <h2 className=\"layout__loginH2\">G M</h2>\r\n                    <input type=\"text\" className=\"login__font\" placeholder=\"Email\" value= {email} onChange={e=> setEmail(e.target.value)} />\r\n                    <input type=\"password\"className=\"login__font\" placeholder=\"Password\" value= {password} onChange={e=> setPassword(e.target.value)} />\r\n                    <div className=\"btn__login\">\r\n                    <button className=\"btn waves-effect waves-light #212121 grey darken-4 \" type=\"submit\" name=\"action\"  onClick={()=>sendData()}>Login\r\n    \r\n                    </button> </div>\r\n                    <h6 className=\"layout__h6\"><Link to=\"/signup\">Dont have an Account?</Link></h6>\r\n                    <h6 className=\"layout__h6\"><Link to=\"/reset\">Forgot Password</Link></h6>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","import React, { useEffect, useState, useContext } from 'react';\r\nimport { UserContext } from '../../App'\r\nimport './home.css';\r\nimport {Link} from 'react-router-dom'\r\nfunction Home() {\r\n    const [getPost, setGetPost] = useState([]);\r\n    const { state } = useContext(UserContext);\r\n\r\n    useEffect(() => {\r\n        fetch('http://localhost:5000/post/allpost', {\r\n            headers: {\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n            }\r\n        })\r\n            .then(res => res.json())\r\n            .then(result => {\r\n                // console.log(result.posts)\r\n                setGetPost(result.posts);\r\n            })\r\n\r\n    }, [])\r\n\r\n    const likePost = (id) => {\r\n        fetch('http://localhost:5000/post/like', {\r\n            method: \"put\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n            },\r\n            body: JSON.stringify({\r\n                postId: id\r\n            })\r\n        }).then(res => res.json())\r\n            .then(result => {\r\n                const newOp = getPost.map(item => {\r\n                    if (item._id === result._id) {\r\n                        return result;\r\n                    }\r\n                    else {\r\n                        return item;\r\n                    }\r\n                })\r\n                setGetPost(newOp)\r\n            }).catch(err => {\r\n                console.log(err)\r\n            })\r\n    }\r\n\r\n    const unlikePost = (id) => {\r\n        fetch('http://localhost:5000/post/unlike', {\r\n            method: \"put\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n            },\r\n            body: JSON.stringify({\r\n                postId: id\r\n            })\r\n        }).then(res => res.json())\r\n            .then(result => {\r\n\r\n                const newOp = getPost.map(item => {\r\n                    if (item._id === result._id) {\r\n                        return result;\r\n                    }\r\n                    else {\r\n                        return item;\r\n                    }\r\n                })\r\n                setGetPost(newOp)\r\n            }).catch(err => {\r\n                console.log(err)\r\n            })\r\n    }\r\n    const makeComment = (text, postId) => {\r\n\r\n        fetch('http://localhost:5000/post/comment', {\r\n            method: \"put\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n            },\r\n            body: JSON.stringify({\r\n                postId,\r\n                text\r\n            })\r\n        }).then(res => res.json())\r\n\r\n            .then(result => {\r\n                console.log(result)\r\n                const newOpp = getPost.map(item => {\r\n                    if (item._id === result._id) {\r\n                        return result;\r\n                    }\r\n                    else {\r\n                        return item;\r\n                    }\r\n\r\n                })\r\n                setGetPost(newOpp);\r\n            }).catch(err => {\r\n                console.log(err)\r\n            })\r\n    }\r\n\r\nconst deletePost =(postId) =>{\r\n    fetch(`http://localhost:5000/post/deletepost/${postId}`,{\r\n        method:\"delete\",\r\n        headers: {\r\n          \r\n            \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n        }\r\n    }).then(res=>res.json())\r\n    .then(result=>{\r\n        console.log(result)\r\n        const newItem = getPost.filter(item=>{\r\n            return item._id !== result._id;\r\n        })\r\n        setGetPost(newItem);\r\n    })\r\n}\r\n\r\n\r\n    return (\r\n        <div className=\"layout__home\" >\r\n            {\r\n\r\n                getPost.map(item => {\r\n                    \r\n                    return (\r\n                        <div className=\"card home-card\" key={item._id} >\r\n                            <h5 > <Link to={item.postedBy._id !== state._id? \"/profile/\"+item.postedBy._id : \"/profile/\"} className=\"link\" style={{float:\"center !important\"}}>\r\n                                {item.postedBy.name} </Link> {item.postedBy._id === state._id && <i className=\"material-icons\" style={{float:\"right\" , cursor:\"pointer\"}} onClick={()=>deletePost(item._id)}>delete_forever</i>}\r\n                            </h5>\r\n                            <div className=\"card-image\">\r\n                                <img src={item.pic} alt={item.postedBy.name}/>\r\n                            </div>\r\n                            <div className=\"card-content\">\r\n                               \r\n                                {item.likes.includes(state._id) ? <i className=\"material-icons unlike\"  onClick={() => { unlikePost(item._id) }}>thumb_down</i> : <i className=\"material-icons rainbow\" onClick={() => { likePost(item._id) }}>thumb_up</i>}\r\n\r\n\r\n\r\n\r\n                                <h6>{item.likes.length} likes</h6>\r\n                                <h6>{item.title} </h6>\r\n\r\n                                <p>{item.body}</p>\r\n                                <br/>\r\n                                <p  style={{fontWeight:\"500\" , color:\"blue\"}}>Comments:</p>\r\n                                {\r\n                                    item.comments.map(c => {\r\n                                        return (\r\n                                            <h6><span style={{ fontWeight:\"500\" }}>{c.postedBy.name}</span> {c.text}</h6>\r\n                                            )\r\n                                    })\r\n                                }\r\n                                <form onSubmit={(e) => {\r\n                                    e.preventDefault()\r\n                                    makeComment(e.target[0].value, item._id)\r\n                                    e.target[0].value=\"\";\r\n                                }}>\r\n                                    <input type=\"text\" placeholder=\"Add comment\"></input>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                })\r\n            }\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import React, { useEffect, useState, useContext } from 'react';\r\nimport './Profile.css';\r\nimport { UserContext } from '../../App'\r\n\r\n\r\nfunction Profile() {\r\n    const [getPic, setGetPic] = useState([]);\r\n    const { state, dispatch } = useContext(UserContext);\r\n    const [profPic, setProfPic] = useState(\"\")\r\n   \r\n    useEffect(() => {\r\n        fetch('http://localhost:5000/post/mypost', {\r\n            headers: {\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n            }\r\n        }).then(res => res.json())\r\n            .then(result => {\r\n                setGetPic(result.mypost)\r\n            })\r\n    }, [])\r\n\r\n    useEffect(()=>{\r\n        if(profPic){\r\n        const data= new FormData();\r\n        data.append(\"file\",profPic);\r\n        data.append(\"upload_preset\",\"mymedia\");\r\n        data.append(\"cloud_name\",\"nik\")\r\n        fetch(\"https://api.cloudinary.com/v1_1/nik/image/upload\",{\r\n            method:\"post\",\r\n            body:data\r\n        })\r\n        .then(res=>res.json())\r\n        .then(data=>{\r\n   \r\n          \r\n            \r\n            fetch('http://localhost:5000/users/updateprofpic',{\r\n                method:\"put\",\r\n                headers:{\r\n                    \"Content-type\":\"application/json\",\r\n                    \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n                },\r\n                body:JSON.stringify({\r\n                    profpic:data.url\r\n                })\r\n\r\n            }).then(res=>res.json())\r\n            .then(result=>{\r\n             \r\n                localStorage.setItem(\"user\",JSON.stringify({...state,profpic:result.profpic}))\r\n                dispatch({type:\"UPDATEPIC\",payload:result.profpic})\r\n            })\r\n        })\r\n        .catch(err=>{\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    },[profPic])\r\n\r\n    const updatePic=(file)=>{\r\n        setProfPic(file)\r\n       \r\n    }\r\n\r\n    return (\r\n        <div className=\"layout__profile\">\r\n            <div className=\"profile__disp\">\r\n                <div>\r\n                    <img style={{ width: \"160px\", height: \"160px\", borderRadius: \"80px\" }} src={state?state.profpic:\"loading.....\"} alt=\"profilePic\" />\r\n                    <div className=\"file-field input-field\">\r\n                        <div className=\"btn #212121 grey darken-4\">\r\n                            <span>Update Profile pic</span>\r\n                            <input type=\"file\" onChange={e => updatePic(e.target.files[0])} />\r\n                        </div>\r\n                        <div className=\"file-path-wrapper\">\r\n                            <input className=\"file-path validate\" type=\"text\" />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <h4 style={{fontWeight:\"600\"}}>{state?state.name:\"Loading...\"}</h4>\r\n                    <h5 style={{color:\"blue\"}}>{state?state.email:\"Loading...\"}</h5>\r\n                    <div style={{ display: \"flex\", justifyContent: \"space-between\", width: \"108%\" }}>\r\n                        <h6>{getPic.length} posts</h6>\r\n                        <h6>{state?state.followers.length:\"0\"} followers</h6>\r\n                        <h6>{state?state.following.length:\"0\"} following</h6>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n            </div>\r\n            <div className=\"gallery\">\r\n                {\r\n                    getPic.map(item => {\r\n                        return (\r\n                            <img className=\"item\" src={item.pic} alt={item.title} key={item._id} />\r\n                        )\r\n                    })\r\n                }\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile\r\n","import React, { useState, useEffect } from 'react';\r\nimport './Login.css';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport M from 'materialize-css';\r\nfunction Signup() {\r\n    const history = useHistory();\r\n    const [name, setName] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [profPic, setProfPic] = useState(\"\")\r\n    const [url, setUrl] = useState(undefined)\r\n\r\n    useEffect(()=>{\r\n        if(url){\r\n            signup()\r\n        }\r\n\r\n    },[url])\r\n\r\n    \r\n    let uploadProfilePic=()=>{\r\n        const data= new FormData();\r\n        data.append(\"file\",profPic);\r\n        data.append(\"upload_preset\",\"mymedia\");\r\n        data.append(\"cloud_name\",\"nik\")\r\n        fetch(\"https://api.cloudinary.com/v1_1/nik/image/upload\",{\r\n            method:\"post\",\r\n            body:data\r\n        })\r\n        .then(res=>res.json())\r\n        .then(data=>{\r\n            setUrl(data.url)\r\n        })\r\n        .catch(err=>{\r\n            console.log(err)\r\n        })\r\n    }\r\n    \r\n\r\n    let signup =()=>{\r\n        if (!(/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.test(email))) {\r\n            M.toast({ html: \"Invalid Email\", classes: \"#d50000 red accent-4\" })\r\n            return\r\n        }\r\n        fetch(\"http://localhost:5000/auth/signup\", {\r\n            method: \"post\",\r\n            headers: {\r\n                \"Content-type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({\r\n                name,\r\n                password,\r\n                email,\r\n                profpic:url\r\n            })\r\n\r\n        }).then(res => res.json())\r\n            .then(e => {\r\n                if (e.error) {\r\n                    M.toast({ html: e.error, classes: \"#ab47bc purple lighten-1\" })\r\n                }\r\n                else {\r\n                    M.toast({ html: e.message, classes: \"#388e3c green darken-2\" })\r\n                    history.push('/signin')\r\n                }\r\n            }).catch(err => {\r\n                console.log(err)\r\n            })\r\n    }\r\n    \r\n\r\n    let sendData = () => {\r\n        \r\n        if(profPic){\r\n            uploadProfilePic()\r\n        }\r\n        else{\r\n            signup()\r\n        \r\n    }\r\n}\r\n\r\n    return (\r\n        <div className=\"layout__login\">\r\n            <div className=\"card\">\r\n                <div className=\"card-content white-text\">\r\n                    <h2 className=\"layout__loginH2\">G M</h2>\r\n                    <input type=\"text\" className=\"login__font\" placeholder=\"Name\" value={name} onChange={e => setName(e.target.value)} />\r\n                    <input type=\"text\" className=\"login__font\" placeholder=\"Email\" value={email} onChange={e => setEmail(e.target.value)} />\r\n                    <input type=\"password\" className=\"login__font\" placeholder=\"Password\" value={password} onChange={e => setPassword(e.target.value)} />\r\n                    <div className=\"file-field input-field\">\r\n                        <div className=\"btn #212121 grey darken-4\">\r\n                            <span>Upload Profile Pic</span>\r\n                            <input type=\"file\" onChange={e => setProfPic(e.target.files[0])} />\r\n                        </div>\r\n                        <div className=\"file-path-wrapper\">\r\n                            <input className=\"file-path validate\" type=\"text\" />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"btn__login\">\r\n                        <button className=\"btn waves-effect waves-light #212121 grey darken-4 \" type=\"submit\" name=\"action\" onClick={() => sendData()}>SignUp\r\n\r\n                </button> </div>\r\n                    <h6 className=\"layout__h6\"><Link to=\"/signin\" >Already have an account?</Link></h6>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Signup\r\n","import React ,{useState,useEffect}from 'react';\r\nimport './Createpost.css'\r\nimport M from 'materialize-css';\r\nimport {useHistory} from 'react-router-dom';\r\n\r\n\r\nfunction CreatePost() {\r\n    const history =useHistory();\r\n    const[title,setTitle] = useState(\"\");\r\n    const[body,setBody] = useState(\"\");\r\n    const[image,setImage] =useState(\"\");\r\n    const[url,setUrl] =useState(\"\");\r\n    useEffect(()=>{\r\nif(url){\r\n\r\n        fetch(\"http://localhost:5000/post/createpost\",{\r\n            method:\"post\",\r\n            headers:{\r\n                \"Content-type\":\"application/json\",\r\n                \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n            },\r\n            body: JSON.stringify({\r\n               title,\r\n               body,\r\n               pic_url:url,\r\n            })\r\n    \r\n        }).then(res=>res.json())\r\n        .then(e=>{\r\n      \r\n            if(e.error){\r\n                M.toast({html: e.error,classes:\"#ab47bc purple lighten-1\"})\r\n            }\r\n            else{\r\n                M.toast({html: \"Post created successfully\",classes:\"#388e3c green darken-2\"})\r\n                history.push('/')\r\n            }\r\n        }).catch(err=>{\r\n            console.log(err)\r\n        })\r\n    }\r\n    },[url])\r\n\r\n    const postDetials=()=>{\r\n        const data= new FormData();\r\n        data.append(\"file\",image);\r\n        data.append(\"upload_preset\",\"mymedia\");\r\n        data.append(\"cloud_name\",\"nik\")\r\n        fetch(\"https://api.cloudinary.com/v1_1/nik/image/upload\",{\r\n            method:\"post\",\r\n            body:data\r\n        })\r\n        .then(res=>res.json())\r\n        .then(data=>{\r\n            setUrl(data.url)\r\n        })\r\n        .catch(err=>{\r\n            console.log(err)\r\n        })\r\n\r\n       \r\n    \r\n    }\r\n\r\n    return (\r\n        <div className=\"card input-filed layout__post\">\r\n\r\n            <input type=\"text\" placeholder=\"Title\" value={title} onChange={e=>setTitle(e.target.value)}/>\r\n            <input type=\"text\" placeholder=\"Caption\" vlaue={body} onChange={e=>setBody(e.target.value)}/>\r\n            <div className=\"file-field input-field\">\r\n      <div className=\"btn #212121 grey darken-4\">\r\n        <span>Upload Image</span>\r\n        <input type=\"file\" onChange={e=>setImage(e.target.files[0])}/>\r\n      </div>\r\n      <div className=\"file-path-wrapper\">\r\n        <input className=\"file-path validate\" type=\"text\"/>\r\n      </div>\r\n      </div>\r\n      <button className=\"btn waves-effect waves-light #212121 grey darken-4 \" type=\"submit\"onClick={()=>postDetials()}>\r\n          Submit post\r\n    \r\n                    </button>\r\n    \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CreatePost\r\n","export const initialState =null;\r\n\r\nexport const reducer=(state,action)=> {\r\n    if(action.type===\"USER\")\r\n    {\r\n        return action.payload\r\n    }\r\n    if(action.type===\"CLEAR\"){\r\n        return null;\r\n    }\r\n    if(action.type===\"UPDATE\"){\r\n        return{\r\n            ...state,\r\n            followers:action.payload.followers,\r\n            following:action.payload.following\r\n        }\r\n    }\r\n    if(action.type===\"UPDATEPIC\"){\r\n        return{\r\n            ...state,\r\n            profpic:action.payload\r\n        }\r\n    }\r\n    return state\r\n}\r\n\r\n\r\n","import React, { useEffect, useState, useContext } from 'react';\r\nimport './Profile.css';\r\nimport { UserContext } from '../../App'\r\nimport {useParams} from 'react-router-dom'\r\n\r\nfunction Profile() {\r\n    const [profile, setProfile] = useState(null);\r\n    const { state, dispatch } = useContext(UserContext)\r\n    const {userid} = useParams()\r\n    const [showfollow,setshowfollow] = useState(state? !state.following.includes(userid):true)\r\n    \r\n    useEffect(() => {\r\n        fetch( `http://localhost:5000/users/user/${userid}`, {\r\n            headers: {\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n            }\r\n        }).then(res => res.json())\r\n            .then(result => {\r\n                // console.log(result)\r\n                setProfile(result)\r\n            })\r\n    }, [])\r\n\r\n    const followUser=()=>{\r\n        fetch('http://localhost:5000/users/follow',{\r\n            method:\"put\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n            },\r\n            body:JSON.stringify({\r\n                followId:userid\r\n            })\r\n        }).then(res=>res.json())\r\n        .then(data=>{\r\n            dispatch({type:\"UPDATE\",payload:{following:data.following,followers:data.followers}})\r\n            localStorage.setItem(\"user\",JSON.stringify(data))\r\n\r\n            setProfile((prevState)=>{\r\n               return{ \r\n                   ...prevState,\r\n                   user:{...prevState.user,\r\n                followers:[...prevState.user.followers,data._id]}\r\n                }\r\n\r\n            })\r\n        })\r\n        setshowfollow(false);\r\n    }\r\n    const unfollowUser=()=>{\r\n        fetch('http://localhost:5000/users/unfollow',{\r\n            method:\"put\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n            },\r\n            body:JSON.stringify({\r\n                unfollowId:userid\r\n            })\r\n        }).then(res=>res.json())\r\n        .then(data=>{\r\n            dispatch({type:\"UPDATE\",payload:{following:data.following,followers:data.followers}})\r\n            localStorage.setItem(\"user\",JSON.stringify(data))\r\n            \r\n            setProfile((prevState)=>{\r\n                const newfollower = prevState.user.followers.filter(item=>item !== data._id)\r\n               return{ \r\n                   ...prevState,\r\n                   user:{...prevState.user,\r\n                followers:newfollower}\r\n                }\r\n\r\n            })\r\n        })\r\n        setshowfollow(true);\r\n        \r\n    }\r\n\r\n    return (\r\n        <>\r\n        {profile? \r\n        <div className=\"layout__profile\">\r\n        <div className=\"profile__disp\">\r\n            <div>\r\n                <img style={{ width: \"160px\", height: \"160px\", borderRadius: \"80px\" }} src={profile.user.profpic} alt=\"profilepic\"/>\r\n            </div>\r\n            <div>\r\n            \r\n                <h4>{profile.user.name}</h4>\r\n                <h5>{profile.user.email}</h5>\r\n                <div style={{ display: \"flex\", justifyContent: \"space-between\", width: \"108%\" }}>\r\n                    <h6>{profile.posts.length} posts</h6>\r\n                    <h6>{profile.user.followers.length} followers</h6>\r\n                    <h6>{profile.user.following.length} following</h6>\r\n                   \r\n                </div>\r\n                { showfollow? <button style={{margin:\"10px\"}} className=\"btn waves-effect waves-light #673ab7 deep-purple \" type=\"submit\" name=\"action\"  onClick={()=>followUser()}>Follow\r\n                   </button> :                \r\n                <button style={{margin:\"10px\"}} className=\"btn waves-effect waves-light #673ab7 deep-purple \" type=\"submit\" name=\"action\"  onClick={()=>unfollowUser()}>UnFollow\r\n                   </button>\r\n                }\r\n                \r\n     \r\n            </div>\r\n\r\n\r\n        </div>\r\n        <div className=\"gallery\">\r\n            {\r\n                profile.posts.map(item => {\r\n                    return (\r\n                        <img className=\"item\" src={item.pic} alt={item.title} key={item._id} />\r\n                    )\r\n                })\r\n            }\r\n\r\n        </div>\r\n    </div>\r\n        \r\n        : <h2> loading........ </h2>}\r\n        \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Profile\r\n","import React, { useEffect, useState, useContext } from 'react';\r\nimport { UserContext } from '../../App'\r\nimport './home.css';\r\nimport {Link} from 'react-router-dom'\r\nfunction Home() {\r\n    const [getPost, setGetPost] = useState([]);\r\n    const { state} = useContext(UserContext);\r\n    useEffect(() => {\r\n        fetch('http://localhost:5000/post/subpost', {\r\n            headers: {\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n            }\r\n        })\r\n            .then(res => res.json())\r\n            .then(result => {\r\n                // console.log(result.posts)\r\n                setGetPost(result.posts);\r\n            })\r\n\r\n    }, [])\r\n\r\n    const likePost = (id) => {\r\n        fetch('http://localhost:5000/post/like', {\r\n            method: \"put\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n            },\r\n            body: JSON.stringify({\r\n                postId: id\r\n            })\r\n        }).then(res => res.json())\r\n            .then(result => {\r\n                const newOp = getPost.map(item => {\r\n                    if (item._id === result._id) {\r\n                        return result;\r\n                    }\r\n                    else {\r\n                        return item;\r\n                    }\r\n                })\r\n                setGetPost(newOp)\r\n            }).catch(err => {\r\n                console.log(err)\r\n            })\r\n    }\r\n\r\n    const unlikePost = (id) => {\r\n        fetch('http://localhost:5000/post/unlike', {\r\n            method: \"put\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n            },\r\n            body: JSON.stringify({\r\n                postId: id\r\n            })\r\n        }).then(res => res.json())\r\n            .then(result => {\r\n\r\n                const newOp = getPost.map(item => {\r\n                    if (item._id === result._id) {\r\n                        return result;\r\n                    }\r\n                    else {\r\n                        return item;\r\n                    }\r\n                })\r\n                setGetPost(newOp)\r\n            }).catch(err => {\r\n                console.log(err)\r\n            })\r\n    }\r\n    const makeComment = (text, postId) => {\r\n\r\n        fetch('http://localhost:5000/post/comment', {\r\n            method: \"put\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n            },\r\n            body: JSON.stringify({\r\n                postId,\r\n                text\r\n            })\r\n        }).then(res => res.json())\r\n\r\n            .then(result => {\r\n                console.log(result)\r\n                const newOpp = getPost.map(item => {\r\n                    if (item._id === result._id) {\r\n                        return result;\r\n                    }\r\n                    else {\r\n                        return item;\r\n                    }\r\n\r\n                })\r\n                setGetPost(newOpp);\r\n            }).catch(err => {\r\n                console.log(err)\r\n            })\r\n    }\r\n\r\nconst deletePost =(postId) =>{\r\n    fetch(`http://localhost:5000/post/deletepost/${postId}`,{\r\n        method:\"delete\",\r\n        headers: {\r\n          \r\n            \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n        }\r\n    }).then(res=>res.json())\r\n    .then(result=>{\r\n        console.log(result)\r\n        const newItem = getPost.filter(item=>{\r\n            return item._id !== result._id;\r\n        })\r\n        setGetPost(newItem);\r\n    })\r\n}\r\n\r\n\r\n    return (\r\n        <div className=\"layout__home\" >\r\n            {\r\n\r\n                getPost.map(item => {\r\n                    return (\r\n                        <div className=\"card home-card\" key={item._id}>\r\n                            <h5 > <Link to={item.postedBy._id !== state._id? \"/profile/\"+item.postedBy._id : \"/profile/\"} className=\"link\" >\r\n                                {item.postedBy.name} </Link> {item.postedBy._id === state._id && <i className=\"material-icons\" style={{float:\"right\" , cursor:\"pointer\"}} onClick={()=>deletePost(item._id)}>delete_forever</i>}\r\n                            </h5>\r\n                            <div className=\"card-image\">\r\n                                <img src={item.pic} alt={item.postedBy.title}/>\r\n                            </div>\r\n                            <div className=\"card-content\">\r\n                               \r\n                                {item.likes.includes(state._id) ? <i className=\"material-icons unlike\"  onClick={() => { unlikePost(item._id) }}>thumb_down</i> : <i className=\"material-icons rainbow\" onClick={() => { likePost(item._id) }}>thumb_up</i>}\r\n\r\n\r\n\r\n\r\n                                <h6>{item.likes.length} likes</h6>\r\n                                <h6>{item.title}</h6>\r\n                                <p>{item.body}</p>\r\n                                <br/>\r\n                                <p  style={{fontWeight:\"500\" , color:\"blue\"}}>Comments:</p>\r\n                                {\r\n                                    item.comments.map(c => {\r\n                                        return (\r\n                                            <h6><span style={{ fontWeight:\"500\" }}>{c.postedBy.name}</span> {c.text}</h6>\r\n                                            )\r\n                                    })\r\n                                }\r\n                                <form onSubmit={(e) => {\r\n                                    e.preventDefault()\r\n                                    makeComment(e.target[0].value, item._id)\r\n                                    e.target[0].value=\"\";\r\n                                }}>\r\n                                    <input type=\"text\" placeholder=\"Add comment\"></input>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                })\r\n            }\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import React, {useState,useContext} from 'react';\r\n\r\nimport './Login.css';\r\nimport {useHistory} from 'react-router-dom';\r\nimport M from 'materialize-css';\r\n\r\n\r\nfunction Reset() {\r\n\r\n    const history =useHistory();\r\n    const [email,setEmail]= useState(\"\");\r\n\r\n    let sendData=()=>{\r\n        if (!(/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.test(email))){\r\n           M.toast({html: \"Invalid Email\",classes:\"#d50000 red accent-4\"})\r\n           return \r\n        }\r\n        fetch(\"http://localhost:5000/auth/resetpassword\",{\r\n        method:\"post\",\r\n        headers:{\r\n            \"Content-type\":\"application/json\"\r\n        },\r\n        body: JSON.stringify({\r\n            email\r\n     \r\n        })\r\n\r\n    }).then(res=>res.json())\r\n    .then(e=>{\r\n        \r\n        if(e.error){\r\n            M.toast({html: e.error,classes:\"#ab47bc purple lighten-1\"})\r\n        }\r\n        else{\r\n           \r\n            M.toast({html: e.message ,classes:\"#388e3c green darken-2\"})\r\n            history.push('/signin')\r\n        }\r\n    }).catch(err=>{\r\n        console.log(err)\r\n    })\r\n    }\r\n    return (\r\n        <div className=\"layout__login\">\r\n            <div className=\"card\">\r\n                <div className=\"card-content white-text\">\r\n                    <h2 className=\"layout__loginH2\">G M</h2>\r\n                    <input type=\"text\" className=\"login__font\" placeholder=\"Email\" value= {email} onChange={e=> setEmail(e.target.value)} />\r\n                    <div className=\"btn__login\">\r\n                    <button className=\"btn waves-effect waves-light #212121 grey darken-4 \" type=\"submit\" name=\"action\"  onClick={()=>sendData()}>Reset password\r\n    \r\n                    </button> </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Reset\r\n","import React, {useState} from 'react';\r\nimport './Login.css';\r\nimport {useHistory,useParams} from 'react-router-dom';\r\nimport M from 'materialize-css';\r\n\r\n\r\n\r\n\r\nfunction Login() {\r\n    \r\n    const history =useHistory();\r\n    const [password,setPassword]= useState(\"\");\r\n    const {token} = useParams()\r\n  \r\n\r\n    let sendData=()=>{\r\n        \r\n        fetch(\"http://localhost:5000/auth/newpassword\",{\r\n        method:\"post\", \r\n        headers:{\r\n            \"Content-type\":\"application/json\"\r\n        },\r\n        body: JSON.stringify({\r\n         \r\n            password,\r\n            token\r\n        })\r\n\r\n    }).then(res=>res.json())\r\n    .then(e=>{\r\n        \r\n        if(e.error){\r\n            M.toast({html: e.error,classes:\"#ab47bc purple lighten-1\"})\r\n        }\r\n        else{\r\n            \r\n            M.toast({html: e.message,classes:\"#388e3c green darken-2\"})\r\n            history.push('/signin')\r\n        }\r\n    }).catch(err=>{\r\n        console.log(err)\r\n    })\r\n    }\r\n    return (\r\n        <div className=\"layout__login\">\r\n            <div className=\"card\">\r\n                <div className=\"card-content white-text\">\r\n                    <h2 className=\"layout__loginH2\">G M</h2>\r\n                    <input type=\"password\"className=\"login__font\" placeholder=\"Enter a Password\" value= {password} onChange={e=> setPassword(e.target.value)} />\r\n                    <div className=\"btn__login\">\r\n                    <button className=\"btn waves-effect waves-light #212121 grey darken-4 \" type=\"submit\" name=\"action\"  onClick={()=>sendData()}>Update Password\r\n    \r\n                    </button> </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","import React ,{useEffect,createContext,useReducer,useContext}from 'react';\nimport Navbar from './components/Navbar';\nimport {BrowserRouter,Route,Switch,useHistory} from 'react-router-dom';\nimport Login from './components/layout/Login';\nimport Home from './components/layout/Home';\nimport Profile from './components/layout/Profile';\nimport Signup from './components/layout/Signup';\nimport CreatePost from './components/layout/CreatePost';\nimport './App.css';\nimport {reducer,initialState} from './reducers/userReducer'\nimport UserProfile from './components/layout/userProfile'\nimport SUP from './components/layout/SubUserPost'\nimport Reset from './components/layout/Reset'; \nimport Newpassword from './components/layout/Newpassword'; \n\n\n\nexport const UserContext = createContext()\n\nconst Routing =()=>{\n  const history = useHistory()\n  const {dispatch} = useContext(UserContext)\n  useEffect(()=>{\n    const user = JSON.parse(localStorage.getItem(\"user\"))\n    \n    if(user){\n      dispatch({type:\"USER\",payload:user})\n      \n    }else{\n      if(!(history.location.pathname.startsWith('/reset')))\n      history.push('/signin')\n    }\n  },[])\n  return(\n    <Switch>\n        <Route exact path='/'>\n         <Home/>\n    </Route>\n       <Route path ='/signin'><Login/></Route>\n       <Route exact path ='/profile'><Profile/></Route>\n       <Route path ='/signup'><Signup/></Route>\n       <Route path ='/createpost'><CreatePost/></Route>\n       <Route path ='/profile/:userid'><UserProfile/></Route>\n       <Route path= '/myfollowingpost'><SUP/></Route>\n       <Route exact path= '/reset'><Reset/></Route>\n       <Route path= '/reset/:token'><Newpassword/></Route>\n       </Switch>\n  )\n}\n\nfunction App() {\n  const [state,dispatch]= useReducer(reducer,initialState);\n  return (\n    <UserContext.Provider value={{state,dispatch}}>\n    <BrowserRouter>\n       <Navbar/>\n     <Routing/>\n    </BrowserRouter>\n    </UserContext.Provider>\n\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}